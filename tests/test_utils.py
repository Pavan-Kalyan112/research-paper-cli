import csv
import os
from pathlib import Path
from pubmed_fetcher.utils import save_results

dummy_data = [{
    "PubmedID": "123456",
    "Title": "AI in Healthcare",
    "Authors": "Jane Doe, John Smith",
    "summary": "This is a summary generated by LLM.",
    "Publication Date": "2024-12-01",
    "CompanyAffiliation(s)": "OpenAI Research",
    "Corresponding Author Email": "jane.doe@example.com",
    "Abstract": "This paper discusses AI advancements in healthcare."
}]

def test_save_as_csv(tmp_path):
    csv_file = tmp_path / "output.csv"
    save_results(dummy_data, str(csv_file), "csv")
    assert csv_file.exists()

    # Check content of CSV
    with open(csv_file, newline='', encoding="utf-8") as f:
        reader = csv.DictReader(f)
        rows = list(reader)
        assert len(rows) == 1
        row = rows[0]
        assert row["Title"] == "AI in Healthcare"
        assert row["Summary"] == "This is a summary generated by LLM."

def test_save_as_pdf(tmp_path):
    pdf_file = tmp_path / "output.pdf"
    save_results(dummy_data, str(pdf_file), "pdf")
    assert pdf_file.exists()
    assert pdf_file.stat().st_size > 0

def test_save_as_markdown(tmp_path):
    md_file = tmp_path / "output.md"
    save_results(dummy_data, str(md_file), "md")
    assert md_file.exists()
    with open(md_file, encoding="utf-8") as f:
        content = f.read()
        assert "# AI in Healthcare" in content
        assert "**Authors**: Jane Doe, John Smith" in content
